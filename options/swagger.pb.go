// Code generated by protoc-gen-go.
// source: swagger.proto
// DO NOT EDIT!

package options

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OpenAPI struct {
	Openapi      string                 `protobuf:"bytes,1,opt,name=openapi" json:"openapi,omitempty"`
	Info         *Info                  `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Servers      []*Server              `protobuf:"bytes,4,rep,name=servers" json:"servers,omitempty"`
	Tags         []*Tag                 `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Paths        map[string]*Path       `protobuf:"bytes,6,rep,name=paths" json:"paths,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Components   *Components            `protobuf:"bytes,7,opt,name=components" json:"components,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,8,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *OpenAPI) Reset()                    { *m = OpenAPI{} }
func (m *OpenAPI) String() string            { return proto.CompactTextString(m) }
func (*OpenAPI) ProtoMessage()               {}
func (*OpenAPI) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OpenAPI) GetOpenapi() string {
	if m != nil {
		return m.Openapi
	}
	return ""
}

func (m *OpenAPI) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *OpenAPI) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *OpenAPI) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *OpenAPI) GetPaths() map[string]*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *OpenAPI) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *OpenAPI) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

type Info struct {
	Title          string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	TermsOfService string   `protobuf:"bytes,3,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Contact        *Contact `protobuf:"bytes,4,opt,name=contact" json:"contact,omitempty"`
	License        *License `protobuf:"bytes,5,opt,name=license" json:"license,omitempty"`
	Version        string   `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Info) GetTermsOfService() string {
	if m != nil {
		return m.TermsOfService
	}
	return ""
}

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Contact struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type License struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *License) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *License) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Server struct {
	Url         string                     `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Variables   map[string]*ServerVariable `protobuf:"bytes,3,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Server) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Server) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Server) GetVariables() map[string]*ServerVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ServerVariable struct {
	Enum        []string `protobuf:"bytes,1,rep,name=enum" json:"enum,omitempty"`
	Default     string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ServerVariable) Reset()                    { *m = ServerVariable{} }
func (m *ServerVariable) String() string            { return proto.CompactTextString(m) }
func (*ServerVariable) ProtoMessage()               {}
func (*ServerVariable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ServerVariable) GetEnum() []string {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *ServerVariable) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ServerVariable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Tag struct {
	Name         string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,3,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

type ExternalDocumentation struct {
	Url         string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *ExternalDocumentation) Reset()                    { *m = ExternalDocumentation{} }
func (m *ExternalDocumentation) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocumentation) ProtoMessage()               {}
func (*ExternalDocumentation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ExternalDocumentation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExternalDocumentation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Path struct {
	Summary     string     `protobuf:"bytes,1,opt,name=summary" json:"summary,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Delete      *Operation `protobuf:"bytes,3,opt,name=delete" json:"delete,omitempty"`
	Get         *Operation `protobuf:"bytes,4,opt,name=get" json:"get,omitempty"`
	Head        *Operation `protobuf:"bytes,5,opt,name=head" json:"head,omitempty"`
	Options     *Operation `protobuf:"bytes,6,opt,name=options" json:"options,omitempty"`
	Patch       *Operation `protobuf:"bytes,7,opt,name=patch" json:"patch,omitempty"`
	Post        *Operation `protobuf:"bytes,8,opt,name=post" json:"post,omitempty"`
	Put         *Operation `protobuf:"bytes,9,opt,name=put" json:"put,omitempty"`
	Trace       *Operation `protobuf:"bytes,10,opt,name=trace" json:"trace,omitempty"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Path) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Path) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Path) GetDelete() *Operation {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Path) GetGet() *Operation {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Path) GetHead() *Operation {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Path) GetOptions() *Operation {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Path) GetPatch() *Operation {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *Path) GetPost() *Operation {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *Path) GetPut() *Operation {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Path) GetTrace() *Operation {
	if m != nil {
		return m.Trace
	}
	return nil
}

type Operation struct {
	Tags         []string               `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Summary      string                 `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	OperationId  string                 `protobuf:"bytes,5,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *Operation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Operation) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

type Components struct {
	Schemas map[string]*Schema `protobuf:"bytes,1,rep,name=schemas" json:"schemas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Components) Reset()                    { *m = Components{} }
func (m *Components) String() string            { return proto.CompactTextString(m) }
func (*Components) ProtoMessage()               {}
func (*Components) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *Components) GetSchemas() map[string]*Schema {
	if m != nil {
		return m.Schemas
	}
	return nil
}

type Schema struct {
	Description string             `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Type        string             `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Properties  map[string]*Schema `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Required    []string           `protobuf:"bytes,4,rep,name=required" json:"required,omitempty"`
	Format      string             `protobuf:"bytes,5,opt,name=format" json:"format,omitempty"`
	Ref         string             `protobuf:"bytes,6,opt,name=ref" json:"ref,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *Schema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Schema) GetProperties() map[string]*Schema {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Schema) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Schema) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func init() {
	proto.RegisterType((*OpenAPI)(nil), "com.pseudomuto.protoc_gen_twagger.options.OpenAPI")
	proto.RegisterType((*Info)(nil), "com.pseudomuto.protoc_gen_twagger.options.Info")
	proto.RegisterType((*Contact)(nil), "com.pseudomuto.protoc_gen_twagger.options.Contact")
	proto.RegisterType((*License)(nil), "com.pseudomuto.protoc_gen_twagger.options.License")
	proto.RegisterType((*Server)(nil), "com.pseudomuto.protoc_gen_twagger.options.Server")
	proto.RegisterType((*ServerVariable)(nil), "com.pseudomuto.protoc_gen_twagger.options.ServerVariable")
	proto.RegisterType((*Tag)(nil), "com.pseudomuto.protoc_gen_twagger.options.Tag")
	proto.RegisterType((*ExternalDocumentation)(nil), "com.pseudomuto.protoc_gen_twagger.options.ExternalDocumentation")
	proto.RegisterType((*Path)(nil), "com.pseudomuto.protoc_gen_twagger.options.Path")
	proto.RegisterType((*Operation)(nil), "com.pseudomuto.protoc_gen_twagger.options.Operation")
	proto.RegisterType((*Components)(nil), "com.pseudomuto.protoc_gen_twagger.options.Components")
	proto.RegisterType((*Schema)(nil), "com.pseudomuto.protoc_gen_twagger.options.Schema")
}

func init() { proto.RegisterFile("swagger.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 888 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x96, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0xe5, 0xd8, 0x49, 0xea, 0x93, 0x6e, 0xa9, 0x46, 0x80, 0xac, 0x5c, 0x05, 0x5f, 0x95,
	0x1b, 0xaf, 0x28, 0x20, 0x01, 0x12, 0xd2, 0x6e, 0x97, 0x02, 0xdd, 0xad, 0x68, 0xe5, 0x2e, 0x5c,
	0x20, 0x44, 0x98, 0xb5, 0x4f, 0x52, 0x0b, 0xdb, 0x63, 0x66, 0xc6, 0x5d, 0xfa, 0x20, 0xdc, 0x21,
	0x2e, 0x78, 0xab, 0x7d, 0x00, 0x1e, 0x03, 0x09, 0xcd, 0x57, 0x92, 0x7e, 0x88, 0xad, 0x5d, 0xf5,
	0x6e, 0x3e, 0x7c, 0x7e, 0xe3, 0xf3, 0x3f, 0x1f, 0x33, 0xf0, 0x48, 0xbc, 0xa6, 0xcb, 0x25, 0xf2,
	0xa4, 0xe1, 0x4c, 0x32, 0xf2, 0x61, 0xc6, 0xaa, 0xa4, 0x11, 0xd8, 0xe6, 0xac, 0x6a, 0x25, 0x33,
	0xab, 0xd9, 0x7c, 0x89, 0xf5, 0x5c, 0xda, 0x0f, 0x59, 0x23, 0x0b, 0x56, 0x8b, 0xf8, 0xdf, 0x00,
	0xc6, 0x27, 0x0d, 0xd6, 0x4f, 0x4f, 0x8f, 0x48, 0x04, 0x63, 0xd6, 0x60, 0x4d, 0x9b, 0x22, 0xf2,
	0x66, 0xde, 0x5e, 0x98, 0xba, 0x29, 0x79, 0x06, 0x41, 0x51, 0x2f, 0x58, 0x34, 0x98, 0x79, 0x7b,
	0x93, 0xfd, 0xc7, 0xc9, 0x9d, 0xf9, 0xc9, 0x51, 0xbd, 0x60, 0xa9, 0x36, 0x26, 0x2f, 0x60, 0x2c,
	0x90, 0x5f, 0x20, 0x17, 0x51, 0x30, 0xf3, 0xf7, 0x26, 0xfb, 0x1f, 0x75, 0xe0, 0x9c, 0x69, 0xcb,
	0xd4, 0x11, 0xc8, 0x01, 0x04, 0x92, 0x2e, 0x45, 0x34, 0xd4, 0xa4, 0xa4, 0x03, 0xe9, 0x25, 0x5d,
	0xa6, 0xda, 0x96, 0x9c, 0xc1, 0xb0, 0xa1, 0xf2, 0x5c, 0x44, 0x23, 0x0d, 0xf9, 0xb2, 0x03, 0xc4,
	0x4a, 0x96, 0x9c, 0x2a, 0xfb, 0xc3, 0x5a, 0xf2, 0xcb, 0xd4, 0xb0, 0xc8, 0xf7, 0x00, 0x19, 0xab,
	0x1a, 0x56, 0x63, 0x2d, 0x45, 0x34, 0xd6, 0x82, 0x7d, 0xda, 0x81, 0xfc, 0x6c, 0x65, 0x9c, 0x6e,
	0x80, 0x08, 0xc2, 0x23, 0xfc, 0x5d, 0x22, 0xaf, 0x69, 0x39, 0xcf, 0x59, 0x26, 0xa2, 0x2d, 0x4d,
	0x7e, 0xd2, 0x81, 0x7c, 0x68, 0xed, 0xbf, 0x62, 0x59, 0x5b, 0x61, 0x2d, 0xa9, 0x5a, 0x4e, 0xb7,
	0x71, 0xbd, 0x2c, 0xa6, 0x05, 0xc0, 0xda, 0x25, 0xb2, 0x0b, 0xfe, 0xaf, 0x78, 0x69, 0x93, 0x41,
	0x0d, 0xc9, 0x21, 0x0c, 0x2f, 0x68, 0xd9, 0x62, 0x8f, 0x4c, 0x50, 0xdc, 0xd4, 0x58, 0x7f, 0x31,
	0xf8, 0xcc, 0x7b, 0x1e, 0x6c, 0xf9, 0xbb, 0x41, 0xfc, 0xd7, 0x00, 0x02, 0x95, 0x23, 0xe4, 0x5d,
	0x18, 0xca, 0x42, 0x96, 0x68, 0x4f, 0x33, 0x13, 0x32, 0x83, 0x49, 0x8e, 0x22, 0xe3, 0x85, 0x86,
	0xe8, 0x53, 0xc3, 0x74, 0x73, 0x89, 0xec, 0xc1, 0xae, 0x44, 0x5e, 0x89, 0x39, 0x5b, 0xcc, 0x55,
	0x72, 0x14, 0x19, 0x46, 0xbe, 0xfe, 0x6c, 0x47, 0xaf, 0x9f, 0x2c, 0xce, 0xcc, 0x2a, 0x39, 0x86,
	0x71, 0xc6, 0x6a, 0x49, 0x33, 0x19, 0x05, 0xfa, 0xef, 0xf7, 0x3b, 0x85, 0x45, 0x5b, 0xa6, 0x0e,
	0xa1, 0x68, 0x65, 0x91, 0x61, 0x2d, 0x30, 0x1a, 0x76, 0xa6, 0x1d, 0x1b, 0xcb, 0xd4, 0x21, 0x54,
	0xe9, 0xa9, 0xb4, 0x56, 0x3e, 0x8e, 0x4c, 0xe9, 0xd9, 0x69, 0x7c, 0x08, 0x63, 0x7b, 0x36, 0x21,
	0x10, 0xd4, 0xb4, 0x72, 0x0a, 0xe9, 0xb1, 0x0a, 0x51, 0xcb, 0x4b, 0x2b, 0x8c, 0x1a, 0x2a, 0x21,
	0xb1, 0xa2, 0x45, 0x69, 0x55, 0x30, 0x93, 0xf8, 0x31, 0x8c, 0xed, 0xa1, 0x77, 0xc3, 0xc4, 0x7f,
	0x0c, 0x60, 0x64, 0x8a, 0xce, 0x6d, 0x7a, 0xeb, 0x33, 0xde, 0x1e, 0x96, 0x9f, 0x21, 0xbc, 0xa0,
	0xbc, 0xa0, 0xaf, 0x4a, 0x14, 0x91, 0xaf, 0xeb, 0xeb, 0x49, 0xe7, 0x72, 0x4f, 0x7e, 0x70, 0x08,
	0x53, 0x62, 0x6b, 0xe4, 0xf4, 0x35, 0xec, 0x5c, 0xdd, 0xbc, 0x25, 0x59, 0x4f, 0xae, 0x26, 0xeb,
	0xe7, 0x9d, 0xcf, 0x77, 0x27, 0x6c, 0xa4, 0x6d, 0xfc, 0x0b, 0xec, 0x5c, 0xdd, 0x54, 0x7a, 0x62,
	0xdd, 0x56, 0x91, 0x37, 0xf3, 0x95, 0x9e, 0x6a, 0xac, 0xe2, 0x99, 0xe3, 0x82, 0xb6, 0xa5, 0xb4,
	0xe2, 0xb8, 0xe9, 0x75, 0xe9, 0xfc, 0x1b, 0xd2, 0xc5, 0x7f, 0x7b, 0xe0, 0xbf, 0xa4, 0xcb, 0x5b,
	0xe3, 0xf4, 0x76, 0xe1, 0x6f, 0x34, 0x0a, 0xff, 0x21, 0x1a, 0x45, 0xfc, 0x02, 0xde, 0xbb, 0xf5,
	0xb3, 0x3e, 0xc9, 0x12, 0xff, 0x39, 0x84, 0x40, 0xb5, 0x07, 0x25, 0x9b, 0x68, 0xab, 0x8a, 0x72,
	0x17, 0x47, 0x37, 0xbd, 0x83, 0xe3, 0xc7, 0x30, 0xca, 0xb1, 0x44, 0x89, 0xd6, 0xe3, 0x4f, 0xba,
	0xb5, 0x73, 0x6e, 0xbc, 0xb4, 0x0c, 0xf2, 0x35, 0xf8, 0x4b, 0x74, 0x8d, 0xa2, 0x1f, 0x4a, 0x01,
	0xc8, 0xb7, 0x10, 0x9c, 0x23, 0xcd, 0x6d, 0x8f, 0xe8, 0x07, 0xd2, 0x04, 0xf2, 0x9d, 0xba, 0x9d,
	0xf5, 0x96, 0x6e, 0x11, 0x7d, 0x61, 0x0e, 0x42, 0x9e, 0xeb, 0xdb, 0x2f, 0x3b, 0xb7, 0x77, 0x54,
	0x3f, 0x9a, 0x41, 0x28, 0x2f, 0x1b, 0x26, 0xa4, 0xbd, 0x94, 0x7a, 0x7a, 0xa9, 0x08, 0x4a, 0xf7,
	0xa6, 0x95, 0x51, 0x78, 0x1f, 0xdd, 0x9b, 0x56, 0x2a, 0xef, 0x24, 0xa7, 0x19, 0x46, 0x70, 0x1f,
	0xef, 0x34, 0x22, 0xfe, 0xc7, 0x83, 0x70, 0xb5, 0xa8, 0xca, 0x52, 0xbf, 0x3c, 0x6c, 0xb9, 0xeb,
	0x97, 0xc4, 0x46, 0xde, 0x0e, 0xfe, 0x37, 0x6f, 0xfd, 0x3b, 0x14, 0x6c, 0xf0, 0x10, 0x05, 0x4b,
	0x3e, 0x80, 0x6d, 0xe6, 0x7c, 0x98, 0x17, 0x26, 0x21, 0xc3, 0x74, 0xb2, 0x5a, 0x3b, 0xca, 0xe3,
	0x37, 0x1e, 0xc0, 0xfa, 0xf9, 0x41, 0x7e, 0x82, 0xb1, 0xc8, 0xce, 0xb1, 0xa2, 0xc6, 0xd7, 0xc9,
	0xfe, 0x41, 0xaf, 0x67, 0x4c, 0x72, 0x66, 0x20, 0xa6, 0x85, 0x3b, 0xe4, 0xb4, 0x82, 0xed, 0xcd,
	0x8d, 0x5b, 0xda, 0xf7, 0x37, 0x57, 0xdb, 0x77, 0xa7, 0xd7, 0xa2, 0x26, 0x6f, 0xb6, 0xed, 0x37,
	0xea, 0x3a, 0xd3, 0xab, 0xd7, 0x43, 0xe2, 0xdd, 0x0c, 0x89, 0x0a, 0xf1, 0x65, 0x83, 0x36, 0x96,
	0x7a, 0x4c, 0x28, 0x40, 0xc3, 0x95, 0x5a, 0xb2, 0x58, 0xdd, 0x68, 0x4f, 0x3b, 0xff, 0x52, 0x72,
	0xba, 0x62, 0x18, 0x3d, 0x36, 0xa0, 0x64, 0x0a, 0x5b, 0x1c, 0x7f, 0x6b, 0x0b, 0x8e, 0xb9, 0x7e,
	0x21, 0x87, 0xe9, 0x6a, 0x4e, 0xde, 0x87, 0xd1, 0x82, 0xf1, 0x8a, 0x4a, 0x1b, 0x38, 0x3b, 0x53,
	0xb2, 0x71, 0x5c, 0xd8, 0x47, 0x83, 0x1a, 0x4e, 0x1b, 0x78, 0xe7, 0xda, 0x21, 0x0f, 0xac, 0xed,
	0x41, 0xf8, 0xa3, 0x6b, 0x2a, 0xaf, 0x46, 0xda, 0xf0, 0xe3, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x69, 0x56, 0xfe, 0xaf, 0x91, 0x0c, 0x00, 0x00,
}
