// Code generated by protoc-gen-go.
// source: swagger.proto
// DO NOT EDIT!

package options

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Parameter_In int32

const (
	Parameter_QUERY  Parameter_In = 0
	Parameter_HEADER Parameter_In = 1
	Parameter_PATH   Parameter_In = 2
	Parameter_COOKIE Parameter_In = 3
)

var Parameter_In_name = map[int32]string{
	0: "QUERY",
	1: "HEADER",
	2: "PATH",
	3: "COOKIE",
}
var Parameter_In_value = map[string]int32{
	"QUERY":  0,
	"HEADER": 1,
	"PATH":   2,
	"COOKIE": 3,
}

func (x Parameter_In) String() string {
	return proto.EnumName(Parameter_In_name, int32(x))
}
func (Parameter_In) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{12, 0} }

type SecurityScheme_In int32

const (
	SecurityScheme_QUERY  SecurityScheme_In = 0
	SecurityScheme_HEADER SecurityScheme_In = 1
	SecurityScheme_COOKIE SecurityScheme_In = 2
)

var SecurityScheme_In_name = map[int32]string{
	0: "QUERY",
	1: "HEADER",
	2: "COOKIE",
}
var SecurityScheme_In_value = map[string]int32{
	"QUERY":  0,
	"HEADER": 1,
	"COOKIE": 2,
}

func (x SecurityScheme_In) String() string {
	return proto.EnumName(SecurityScheme_In_name, int32(x))
}
func (SecurityScheme_In) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{17, 0} }

type SecurityScheme_Type int32

const (
	SecurityScheme_API_KEY        SecurityScheme_Type = 0
	SecurityScheme_HTTP           SecurityScheme_Type = 1
	SecurityScheme_OAUTH2         SecurityScheme_Type = 2
	SecurityScheme_OPENID_CONNECT SecurityScheme_Type = 3
)

var SecurityScheme_Type_name = map[int32]string{
	0: "API_KEY",
	1: "HTTP",
	2: "OAUTH2",
	3: "OPENID_CONNECT",
}
var SecurityScheme_Type_value = map[string]int32{
	"API_KEY":        0,
	"HTTP":           1,
	"OAUTH2":         2,
	"OPENID_CONNECT": 3,
}

func (x SecurityScheme_Type) String() string {
	return proto.EnumName(SecurityScheme_Type_name, int32(x))
}
func (SecurityScheme_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{17, 1} }

type OpenAPI struct {
	Openapi      string                 `protobuf:"bytes,1,opt,name=openapi" json:"openapi,omitempty"`
	Info         *Info                  `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Security     []*SecurityRequirement `protobuf:"bytes,3,rep,name=security" json:"security,omitempty"`
	Servers      []*Server              `protobuf:"bytes,4,rep,name=servers" json:"servers,omitempty"`
	Tags         []*Tag                 `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Paths        map[string]*Path       `protobuf:"bytes,6,rep,name=paths" json:"paths,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Components   *Components            `protobuf:"bytes,7,opt,name=components" json:"components,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,8,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *OpenAPI) Reset()                    { *m = OpenAPI{} }
func (m *OpenAPI) String() string            { return proto.CompactTextString(m) }
func (*OpenAPI) ProtoMessage()               {}
func (*OpenAPI) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OpenAPI) GetOpenapi() string {
	if m != nil {
		return m.Openapi
	}
	return ""
}

func (m *OpenAPI) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *OpenAPI) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *OpenAPI) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *OpenAPI) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *OpenAPI) GetPaths() map[string]*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *OpenAPI) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *OpenAPI) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

type Info struct {
	Title          string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	TermsOfService string   `protobuf:"bytes,3,opt,name=terms_of_service,json=termsOfService" json:"terms_of_service,omitempty"`
	Contact        *Contact `protobuf:"bytes,4,opt,name=contact" json:"contact,omitempty"`
	License        *License `protobuf:"bytes,5,opt,name=license" json:"license,omitempty"`
	Version        string   `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Info) GetTermsOfService() string {
	if m != nil {
		return m.TermsOfService
	}
	return ""
}

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Contact struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type License struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *License) Reset()                    { *m = License{} }
func (m *License) String() string            { return proto.CompactTextString(m) }
func (*License) ProtoMessage()               {}
func (*License) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *License) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *License) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Server struct {
	Url         string                     `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description string                     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Variables   map[string]*ServerVariable `protobuf:"bytes,3,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Server) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Server) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Server) GetVariables() map[string]*ServerVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ServerVariable struct {
	Enum        []string `protobuf:"bytes,1,rep,name=enum" json:"enum,omitempty"`
	Default     string   `protobuf:"bytes,2,opt,name=default" json:"default,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ServerVariable) Reset()                    { *m = ServerVariable{} }
func (m *ServerVariable) String() string            { return proto.CompactTextString(m) }
func (*ServerVariable) ProtoMessage()               {}
func (*ServerVariable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ServerVariable) GetEnum() []string {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *ServerVariable) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ServerVariable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Tag struct {
	Name         string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,3,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

type ExternalDocumentation struct {
	Url         string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *ExternalDocumentation) Reset()                    { *m = ExternalDocumentation{} }
func (m *ExternalDocumentation) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocumentation) ProtoMessage()               {}
func (*ExternalDocumentation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ExternalDocumentation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExternalDocumentation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Path struct {
	Summary     string     `protobuf:"bytes,1,opt,name=summary" json:"summary,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Delete      *Operation `protobuf:"bytes,3,opt,name=delete" json:"delete,omitempty"`
	Get         *Operation `protobuf:"bytes,4,opt,name=get" json:"get,omitempty"`
	Head        *Operation `protobuf:"bytes,5,opt,name=head" json:"head,omitempty"`
	Options     *Operation `protobuf:"bytes,6,opt,name=options" json:"options,omitempty"`
	Patch       *Operation `protobuf:"bytes,7,opt,name=patch" json:"patch,omitempty"`
	Post        *Operation `protobuf:"bytes,8,opt,name=post" json:"post,omitempty"`
	Put         *Operation `protobuf:"bytes,9,opt,name=put" json:"put,omitempty"`
	Trace       *Operation `protobuf:"bytes,10,opt,name=trace" json:"trace,omitempty"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *Path) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Path) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Path) GetDelete() *Operation {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Path) GetGet() *Operation {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Path) GetHead() *Operation {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Path) GetOptions() *Operation {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Path) GetPatch() *Operation {
	if m != nil {
		return m.Patch
	}
	return nil
}

func (m *Path) GetPost() *Operation {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *Path) GetPut() *Operation {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Path) GetTrace() *Operation {
	if m != nil {
		return m.Trace
	}
	return nil
}

type Operation struct {
	Tags         []string               `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Summary      string                 `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ExternalDocs *ExternalDocumentation `protobuf:"bytes,4,opt,name=external_docs,json=externalDocs" json:"external_docs,omitempty"`
	OperationId  string                 `protobuf:"bytes,5,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Parameters   []*Parameter           `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty"`
	RequestBody  *RequestBody           `protobuf:"bytes,7,opt,name=request_body,json=requestBody" json:"request_body,omitempty"`
	Responses    map[string]*Response   `protobuf:"bytes,8,rep,name=responses" json:"responses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Deprecated   bool                   `protobuf:"varint,10,opt,name=deprecated" json:"deprecated,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *Operation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Operation) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

func (m *Operation) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Operation) GetRequestBody() *RequestBody {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

func (m *Operation) GetResponses() map[string]*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

type Components struct {
	Schemas         map[string]*Schema         `protobuf:"bytes,1,rep,name=schemas" json:"schemas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SecuritySchemes map[string]*SecurityScheme `protobuf:"bytes,2,rep,name=security_schemes,json=securitySchemes" json:"security_schemes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Components) Reset()                    { *m = Components{} }
func (m *Components) String() string            { return proto.CompactTextString(m) }
func (*Components) ProtoMessage()               {}
func (*Components) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *Components) GetSchemas() map[string]*Schema {
	if m != nil {
		return m.Schemas
	}
	return nil
}

func (m *Components) GetSecuritySchemes() map[string]*SecurityScheme {
	if m != nil {
		return m.SecuritySchemes
	}
	return nil
}

type Schema struct {
	Description string             `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Type        string             `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Properties  map[string]*Schema `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Required    []string           `protobuf:"bytes,4,rep,name=required" json:"required,omitempty"`
	Format      string             `protobuf:"bytes,5,opt,name=format" json:"format,omitempty"`
	Ref         string             `protobuf:"bytes,6,opt,name=ref" json:"ref,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *Schema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Schema) GetProperties() map[string]*Schema {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *Schema) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Schema) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type Parameter struct {
	Name            string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	In              Parameter_In `protobuf:"varint,2,opt,name=in,enum=com.pseudomuto.protoc_gen_twagger.options.Parameter_In" json:"in,omitempty"`
	Description     string       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Required        bool         `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	AllowEmptyValue bool         `protobuf:"varint,5,opt,name=allow_empty_value,json=allowEmptyValue" json:"allow_empty_value,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetIn() Parameter_In {
	if m != nil {
		return m.In
	}
	return Parameter_QUERY
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Parameter) GetAllowEmptyValue() bool {
	if m != nil {
		return m.AllowEmptyValue
	}
	return false
}

type RequestBody struct {
	Description string                `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Content     map[string]*MediaType `protobuf:"bytes,2,rep,name=content" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Required    bool                  `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
}

func (m *RequestBody) Reset()                    { *m = RequestBody{} }
func (m *RequestBody) String() string            { return proto.CompactTextString(m) }
func (*RequestBody) ProtoMessage()               {}
func (*RequestBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *RequestBody) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RequestBody) GetContent() map[string]*MediaType {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RequestBody) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

type Response struct {
	Description string                `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Content     map[string]*MediaType `protobuf:"bytes,3,rep,name=content" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Response) GetContent() map[string]*MediaType {
	if m != nil {
		return m.Content
	}
	return nil
}

type MediaType struct {
	Schema *Schema `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
}

func (m *MediaType) Reset()                    { *m = MediaType{} }
func (m *MediaType) String() string            { return proto.CompactTextString(m) }
func (*MediaType) ProtoMessage()               {}
func (*MediaType) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *MediaType) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type SecurityRequirement struct {
	Name   string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Scopes []string `protobuf:"bytes,2,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *SecurityRequirement) Reset()                    { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string            { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()               {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *SecurityRequirement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityRequirement) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type SecurityScheme struct {
	Type             SecurityScheme_Type `protobuf:"varint,1,opt,name=type,enum=com.pseudomuto.protoc_gen_twagger.options.SecurityScheme_Type" json:"type,omitempty"`
	Description      string              `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Name             string              `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	In               SecurityScheme_In   `protobuf:"varint,4,opt,name=in,enum=com.pseudomuto.protoc_gen_twagger.options.SecurityScheme_In" json:"in,omitempty"`
	Scheme           string              `protobuf:"bytes,5,opt,name=scheme" json:"scheme,omitempty"`
	BearerFormat     string              `protobuf:"bytes,6,opt,name=bearer_format,json=bearerFormat" json:"bearer_format,omitempty"`
	OpenIdConnectUrl string              `protobuf:"bytes,8,opt,name=open_id_connect_url,json=openIdConnectUrl" json:"open_id_connect_url,omitempty"`
}

func (m *SecurityScheme) Reset()                    { *m = SecurityScheme{} }
func (m *SecurityScheme) String() string            { return proto.CompactTextString(m) }
func (*SecurityScheme) ProtoMessage()               {}
func (*SecurityScheme) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *SecurityScheme) GetType() SecurityScheme_Type {
	if m != nil {
		return m.Type
	}
	return SecurityScheme_API_KEY
}

func (m *SecurityScheme) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityScheme) GetIn() SecurityScheme_In {
	if m != nil {
		return m.In
	}
	return SecurityScheme_QUERY
}

func (m *SecurityScheme) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *SecurityScheme) GetBearerFormat() string {
	if m != nil {
		return m.BearerFormat
	}
	return ""
}

func (m *SecurityScheme) GetOpenIdConnectUrl() string {
	if m != nil {
		return m.OpenIdConnectUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*OpenAPI)(nil), "com.pseudomuto.protoc_gen_twagger.options.OpenAPI")
	proto.RegisterType((*Info)(nil), "com.pseudomuto.protoc_gen_twagger.options.Info")
	proto.RegisterType((*Contact)(nil), "com.pseudomuto.protoc_gen_twagger.options.Contact")
	proto.RegisterType((*License)(nil), "com.pseudomuto.protoc_gen_twagger.options.License")
	proto.RegisterType((*Server)(nil), "com.pseudomuto.protoc_gen_twagger.options.Server")
	proto.RegisterType((*ServerVariable)(nil), "com.pseudomuto.protoc_gen_twagger.options.ServerVariable")
	proto.RegisterType((*Tag)(nil), "com.pseudomuto.protoc_gen_twagger.options.Tag")
	proto.RegisterType((*ExternalDocumentation)(nil), "com.pseudomuto.protoc_gen_twagger.options.ExternalDocumentation")
	proto.RegisterType((*Path)(nil), "com.pseudomuto.protoc_gen_twagger.options.Path")
	proto.RegisterType((*Operation)(nil), "com.pseudomuto.protoc_gen_twagger.options.Operation")
	proto.RegisterType((*Components)(nil), "com.pseudomuto.protoc_gen_twagger.options.Components")
	proto.RegisterType((*Schema)(nil), "com.pseudomuto.protoc_gen_twagger.options.Schema")
	proto.RegisterType((*Parameter)(nil), "com.pseudomuto.protoc_gen_twagger.options.Parameter")
	proto.RegisterType((*RequestBody)(nil), "com.pseudomuto.protoc_gen_twagger.options.RequestBody")
	proto.RegisterType((*Response)(nil), "com.pseudomuto.protoc_gen_twagger.options.Response")
	proto.RegisterType((*MediaType)(nil), "com.pseudomuto.protoc_gen_twagger.options.MediaType")
	proto.RegisterType((*SecurityRequirement)(nil), "com.pseudomuto.protoc_gen_twagger.options.SecurityRequirement")
	proto.RegisterType((*SecurityScheme)(nil), "com.pseudomuto.protoc_gen_twagger.options.SecurityScheme")
	proto.RegisterEnum("com.pseudomuto.protoc_gen_twagger.options.Parameter_In", Parameter_In_name, Parameter_In_value)
	proto.RegisterEnum("com.pseudomuto.protoc_gen_twagger.options.SecurityScheme_In", SecurityScheme_In_name, SecurityScheme_In_value)
	proto.RegisterEnum("com.pseudomuto.protoc_gen_twagger.options.SecurityScheme_Type", SecurityScheme_Type_name, SecurityScheme_Type_value)
}

func init() { proto.RegisterFile("swagger.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0xfe, 0x45, 0x52, 0x17, 0x1e, 0xc9, 0x0e, 0xff, 0x49, 0x1a, 0x10, 0x5a, 0x14, 0x2e, 0xbb,
	0xa8, 0x5b, 0xa0, 0x0a, 0xe2, 0xa4, 0x57, 0x34, 0x41, 0x6c, 0x45, 0x89, 0x25, 0xbb, 0x96, 0x4b,
	0xcb, 0x01, 0x12, 0xb4, 0x65, 0xc7, 0xe4, 0xd8, 0x26, 0x2a, 0x5e, 0x42, 0x0e, 0x93, 0x6a, 0xd1,
	0x65, 0xfb, 0x06, 0xdd, 0x05, 0x59, 0xf4, 0x51, 0xfa, 0x02, 0x5d, 0x74, 0xd5, 0xb7, 0x29, 0xe6,
	0x42, 0x89, 0x4a, 0x84, 0xc4, 0x64, 0x9a, 0xee, 0x34, 0x87, 0x73, 0xbe, 0x33, 0xf3, 0xcd, 0x39,
	0xdf, 0x9c, 0x11, 0xac, 0xa5, 0x4f, 0xf1, 0xd9, 0x19, 0x49, 0x7a, 0x71, 0x12, 0xd1, 0x08, 0x7d,
	0xe8, 0x46, 0x41, 0x2f, 0x4e, 0x49, 0xe6, 0x45, 0x41, 0x46, 0x23, 0x61, 0x75, 0x9d, 0x33, 0x12,
	0x3a, 0x54, 0x4e, 0x8c, 0x62, 0xea, 0x47, 0x61, 0x6a, 0xfd, 0x55, 0x87, 0xe6, 0x38, 0x26, 0xe1,
	0xf6, 0xe1, 0x10, 0x99, 0xd0, 0x8c, 0x62, 0x12, 0xe2, 0xd8, 0x37, 0x6b, 0x1b, 0xb5, 0x4d, 0xdd,
	0xce, 0x87, 0xa8, 0x0f, 0x9a, 0x1f, 0x9e, 0x46, 0xa6, 0xb2, 0x51, 0xdb, 0x6c, 0x6f, 0x5d, 0xeb,
	0x5d, 0x18, 0xbf, 0x37, 0x0c, 0x4f, 0x23, 0x9b, 0x3b, 0xa3, 0x47, 0xd0, 0x4a, 0x89, 0x9b, 0x25,
	0x3e, 0x9d, 0x99, 0xea, 0x86, 0xba, 0xd9, 0xde, 0xba, 0x5d, 0x02, 0xe8, 0x48, 0xba, 0xda, 0xe4,
	0x71, 0xe6, 0x27, 0x24, 0x20, 0x21, 0xb5, 0xe7, 0x78, 0x68, 0x0f, 0x9a, 0x29, 0x49, 0x9e, 0x90,
	0x24, 0x35, 0x35, 0x0e, 0x7d, 0xbd, 0x14, 0x34, 0xf3, 0xb4, 0x73, 0x04, 0xb4, 0x03, 0x1a, 0xc5,
	0x67, 0xa9, 0x59, 0xe7, 0x48, 0xbd, 0x12, 0x48, 0x13, 0x7c, 0x66, 0x73, 0x5f, 0x74, 0x04, 0xf5,
	0x18, 0xd3, 0xf3, 0xd4, 0x6c, 0x70, 0x90, 0x5b, 0x25, 0x40, 0xe4, 0x71, 0xf4, 0x0e, 0x99, 0xff,
	0x20, 0xa4, 0xc9, 0xcc, 0x16, 0x58, 0xe8, 0x18, 0xc0, 0x8d, 0x82, 0x38, 0x0a, 0x49, 0x48, 0x53,
	0xb3, 0xc9, 0x0f, 0xe3, 0x93, 0x12, 0xc8, 0xfd, 0xb9, 0xb3, 0x5d, 0x00, 0x42, 0x04, 0xd6, 0xc8,
	0x4f, 0x94, 0x24, 0x21, 0x9e, 0x3a, 0x5e, 0xe4, 0xa6, 0x66, 0x8b, 0x23, 0xdf, 0x29, 0x81, 0x3c,
	0x90, 0xfe, 0x77, 0x23, 0x37, 0x63, 0x47, 0x83, 0x99, 0xd9, 0xee, 0x90, 0x85, 0x39, 0xed, 0xfa,
	0x00, 0x8b, 0x2d, 0x21, 0x03, 0xd4, 0x1f, 0xc9, 0x4c, 0x26, 0x1a, 0xfb, 0x89, 0x06, 0x50, 0x7f,
	0x82, 0xa7, 0x19, 0xa9, 0x90, 0x65, 0x0c, 0xd7, 0x16, 0xde, 0x5f, 0x2a, 0x9f, 0xd7, 0xac, 0xe7,
	0x0a, 0x68, 0x2c, 0xf3, 0xd0, 0x15, 0xa8, 0x53, 0x9f, 0x4e, 0x89, 0x8c, 0x23, 0x06, 0x68, 0x03,
	0xda, 0x1e, 0x49, 0xdd, 0xc4, 0xe7, 0xee, 0x3c, 0x9e, 0x6e, 0x17, 0x4d, 0x68, 0x13, 0x0c, 0x4a,
	0x92, 0x20, 0x75, 0xa2, 0x53, 0x87, 0xa5, 0x85, 0xef, 0x12, 0x53, 0xe5, 0xd3, 0xd6, 0xb9, 0x7d,
	0x7c, 0x7a, 0x24, 0xac, 0x68, 0x1f, 0x9a, 0x6e, 0x14, 0x52, 0xec, 0x52, 0x53, 0xe3, 0xeb, 0xde,
	0x2a, 0x75, 0x20, 0xdc, 0xd3, 0xce, 0x21, 0x18, 0xda, 0xd4, 0x77, 0x49, 0x98, 0x12, 0xb3, 0x5e,
	0x1a, 0x6d, 0x5f, 0x78, 0xda, 0x39, 0x04, 0x2b, 0x68, 0x96, 0xd0, 0x6c, 0x8f, 0x0d, 0x51, 0xd0,
	0x72, 0x68, 0x0d, 0xa0, 0x29, 0x63, 0x23, 0x04, 0x5a, 0x88, 0x83, 0x9c, 0x21, 0xfe, 0x9b, 0x1d,
	0x4e, 0x96, 0x4c, 0x25, 0x31, 0xec, 0x27, 0x23, 0x92, 0x04, 0xd8, 0x9f, 0x4a, 0x16, 0xc4, 0xc0,
	0xba, 0x06, 0x4d, 0x19, 0xf4, 0x62, 0x30, 0xd6, 0x6f, 0x0a, 0x34, 0x44, 0xb9, 0xe5, 0x1f, 0x6b,
	0x8b, 0x18, 0xaf, 0x3f, 0x96, 0xef, 0x41, 0x7f, 0x82, 0x13, 0x1f, 0x9f, 0x4c, 0x49, 0x2a, 0x35,
	0xe4, 0x4e, 0xe9, 0x42, 0xef, 0x3d, 0xc8, 0x21, 0x44, 0x71, 0x2d, 0x20, 0xbb, 0x4f, 0x61, 0x7d,
	0xf9, 0xe3, 0x8a, 0x34, 0x1d, 0x2f, 0xa7, 0xe9, 0x17, 0xa5, 0xe3, 0xe7, 0x11, 0x8a, 0x09, 0xfb,
	0x03, 0xac, 0x2f, 0x7f, 0x64, 0x7c, 0x92, 0x30, 0x0b, 0xcc, 0xda, 0x86, 0xca, 0xf8, 0x64, 0xbf,
	0xd9, 0x79, 0x7a, 0xe4, 0x14, 0x67, 0x53, 0x2a, 0xc9, 0xc9, 0x87, 0x2f, 0x52, 0xa7, 0xbe, 0x44,
	0x9d, 0xf5, 0x7b, 0x0d, 0xd4, 0x09, 0x3e, 0x5b, 0x79, 0x4e, 0xaf, 0x27, 0xfe, 0x25, 0x89, 0x50,
	0xdf, 0x86, 0x44, 0x58, 0x7b, 0xf0, 0xce, 0xca, 0x69, 0x55, 0x92, 0xc5, 0x7a, 0x56, 0x07, 0x8d,
	0x09, 0x03, 0xa3, 0x2d, 0xcd, 0x82, 0x00, 0x27, 0xf9, 0x39, 0xe6, 0xc3, 0x0b, 0x6c, 0x7c, 0x1f,
	0x1a, 0x1e, 0x99, 0x12, 0x4a, 0xe4, 0x8e, 0x6f, 0x96, 0x13, 0xf2, 0x44, 0xec, 0x52, 0x62, 0xa0,
	0x7b, 0xa0, 0x9e, 0x91, 0x5c, 0x28, 0xaa, 0x41, 0x31, 0x00, 0xb4, 0x0b, 0xda, 0x39, 0xc1, 0x9e,
	0xd4, 0x88, 0x6a, 0x40, 0x1c, 0x01, 0x1d, 0xb0, 0x3b, 0x9f, 0x7f, 0xe2, 0x12, 0x51, 0x15, 0x2c,
	0x07, 0x41, 0x23, 0x7e, 0xef, 0xb9, 0xe7, 0xf2, 0x76, 0xaa, 0x86, 0x26, 0x20, 0xd8, 0x2e, 0xe3,
	0x28, 0xa5, 0xf2, 0x3a, 0xaa, 0xb8, 0x4b, 0x86, 0xc0, 0x78, 0x8f, 0x33, 0x6a, 0xea, 0x6f, 0xc2,
	0x7b, 0x9c, 0x51, 0xb6, 0x3b, 0x9a, 0x60, 0x97, 0x98, 0xf0, 0x26, 0xbb, 0xe3, 0x10, 0xd6, 0xf3,
	0x3a, 0xe8, 0x73, 0x23, 0x2b, 0x4b, 0xde, 0x73, 0xc8, 0x72, 0xe7, 0x3d, 0x44, 0x21, 0x6f, 0x95,
	0x57, 0xe6, 0xad, 0x7a, 0x81, 0x82, 0xd5, 0xde, 0x46, 0xc1, 0xa2, 0xf7, 0xa0, 0x13, 0xe5, 0x7b,
	0x70, 0x7c, 0x91, 0x90, 0xba, 0xdd, 0x9e, 0xdb, 0x86, 0x1e, 0x9a, 0x00, 0xc4, 0x38, 0xc1, 0x01,
	0xa1, 0xac, 0x3b, 0x13, 0xed, 0xd0, 0xcd, 0x52, 0x77, 0xbb, 0x74, 0xb6, 0x0b, 0x38, 0xe8, 0x21,
	0x74, 0x12, 0xf2, 0x38, 0x23, 0x29, 0x75, 0x4e, 0x22, 0x6f, 0x26, 0xd3, 0xed, 0xd3, 0x12, 0xb8,
	0xb6, 0x70, 0xdf, 0x89, 0xbc, 0x99, 0xdd, 0x4e, 0x16, 0x03, 0x84, 0x41, 0x4f, 0x48, 0x1a, 0x47,
	0x61, 0x4a, 0x58, 0x2b, 0xc4, 0xd6, 0xdb, 0xaf, 0x72, 0xd0, 0x3d, 0x3b, 0x47, 0x91, 0xf7, 0xcc,
	0x1c, 0x15, 0xbd, 0x0b, 0xe0, 0x91, 0x38, 0x21, 0x2e, 0xa6, 0xc4, 0xe3, 0xc9, 0xd4, 0xb2, 0x0b,
	0x96, 0xee, 0x63, 0x58, 0x5f, 0x76, 0x5e, 0x71, 0x0f, 0x0d, 0x97, 0xef, 0xa1, 0x1b, 0xa5, 0xb6,
	0x2e, 0xb0, 0x0b, 0x37, 0xd0, 0x48, 0x6b, 0xe9, 0x06, 0x8c, 0xb4, 0x56, 0xdb, 0xe8, 0x8c, 0xb4,
	0x56, 0xc7, 0x58, 0xb3, 0xfe, 0x54, 0x01, 0x16, 0x1d, 0x23, 0xfa, 0x16, 0x9a, 0xa9, 0x7b, 0x4e,
	0x02, 0x2c, 0x92, 0xb4, 0xbd, 0xb5, 0x53, 0xa9, 0xf3, 0xec, 0x1d, 0x09, 0x10, 0xc1, 0x49, 0x0e,
	0x89, 0x32, 0x30, 0xf2, 0x66, 0xde, 0xe1, 0x36, 0x92, 0x9a, 0x0a, 0x0f, 0x33, 0xaa, 0x18, 0x46,
	0xa2, 0x1d, 0x09, 0x30, 0x11, 0xee, 0x52, 0xba, 0x6c, 0xed, 0x06, 0xd0, 0x29, 0xae, 0x67, 0x05,
	0xcd, 0xf7, 0x97, 0x69, 0x2e, 0xf5, 0xae, 0xe0, 0xc8, 0x05, 0x92, 0xbb, 0x3f, 0xc3, 0x95, 0x55,
	0xeb, 0xfa, 0xb7, 0xbb, 0x8c, 0x62, 0x84, 0x62, 0x97, 0xf1, 0x37, 0xeb, 0xbe, 0xf8, 0xa2, 0x5e,
	0x54, 0x90, 0xda, 0xcb, 0x0a, 0xc2, 0x14, 0x69, 0x16, 0x13, 0x29, 0x3d, 0xfc, 0x37, 0xc2, 0x00,
	0x71, 0xc2, 0x8a, 0x9b, 0xfa, 0xf3, 0x06, 0x6c, 0xbb, 0x34, 0x23, 0xbd, 0xc3, 0x39, 0x86, 0x38,
	0x96, 0x02, 0x28, 0xea, 0x42, 0x2b, 0x11, 0x4f, 0x3c, 0x8f, 0x3f, 0xe5, 0x74, 0x7b, 0x3e, 0x46,
	0x57, 0xa1, 0x71, 0x1a, 0x25, 0x01, 0xa6, 0x52, 0x67, 0xe4, 0x88, 0xd1, 0x97, 0x90, 0x53, 0xd9,
	0xe3, 0xb2, 0x9f, 0xdd, 0x18, 0x2e, 0xbd, 0x10, 0xe4, 0x2d, 0x1f, 0xad, 0xf5, 0x8b, 0x02, 0xfa,
	0x5c, 0xaa, 0x56, 0x76, 0x59, 0xf7, 0x41, 0xf1, 0x45, 0x8f, 0xb1, 0xbe, 0xf5, 0x59, 0x15, 0x01,
	0xec, 0x0d, 0x43, 0x5b, 0xf1, 0xc3, 0x0b, 0xa8, 0xff, 0x32, 0x89, 0x4c, 0x5d, 0x16, 0x24, 0x7e,
	0x04, 0xff, 0xc7, 0xd3, 0x69, 0xf4, 0xd4, 0x21, 0x41, 0x4c, 0x67, 0x8e, 0x60, 0xa0, 0xce, 0x27,
	0x5d, 0xe2, 0x1f, 0x06, 0xcc, 0xfe, 0x80, 0x99, 0xad, 0xeb, 0xa0, 0x0c, 0x43, 0xa4, 0x43, 0xfd,
	0x9b, 0xe3, 0x81, 0xfd, 0xd0, 0xf8, 0x1f, 0x02, 0x68, 0xec, 0x0e, 0xb6, 0xef, 0x0e, 0x6c, 0xa3,
	0x86, 0x5a, 0xa0, 0x1d, 0x6e, 0x4f, 0x76, 0x0d, 0x85, 0x59, 0xfb, 0xe3, 0xf1, 0xde, 0x70, 0x60,
	0xa8, 0xd6, 0x33, 0x05, 0xda, 0x05, 0x69, 0xbd, 0x40, 0xa2, 0x7d, 0x27, 0x5e, 0x50, 0x24, 0xa4,
	0xb2, 0xe2, 0xfb, 0xd5, 0x54, 0x9c, 0xbf, 0xa6, 0x48, 0x48, 0xa5, 0xb2, 0x48, 0xcc, 0x25, 0x2e,
	0xd4, 0x65, 0x2e, 0xba, 0x31, 0x74, 0x8a, 0x4e, 0x2b, 0x72, 0x64, 0xb4, 0x9c, 0x23, 0x65, 0x2e,
	0xae, 0xaf, 0x89, 0xe7, 0xe3, 0xc9, 0x2c, 0x5e, 0x2a, 0xc1, 0x5f, 0x15, 0x68, 0xe5, 0xf2, 0x7b,
	0x01, 0x6e, 0x1e, 0x2d, 0xb8, 0x29, 0xff, 0xdc, 0xc9, 0xe3, 0xac, 0x26, 0xe6, 0xbf, 0xdf, 0xfc,
	0x48, 0x6b, 0x29, 0x86, 0x3a, 0xd2, 0x5a, 0x9a, 0x51, 0xb7, 0xce, 0x41, 0x9f, 0xcf, 0x41, 0x43,
	0x68, 0x88, 0x8b, 0x80, 0x47, 0xaf, 0x54, 0x8a, 0x12, 0x60, 0x1e, 0x43, 0x35, 0x34, 0x19, 0x69,
	0x1b, 0x2e, 0xaf, 0xf8, 0xf3, 0x68, 0x65, 0x89, 0x5e, 0x65, 0xeb, 0x88, 0x62, 0x79, 0xf7, 0xe8,
	0xb6, 0x1c, 0x59, 0x7f, 0xa8, 0xec, 0x7d, 0x56, 0x94, 0x55, 0x64, 0x4b, 0x79, 0xac, 0xf1, 0x7a,
	0xbe, 0x5d, 0x59, 0x9f, 0x7b, 0x9c, 0x24, 0x21, 0xaf, 0xaf, 0x7f, 0x8e, 0xe4, 0x8b, 0x56, 0x0b,
	0x8b, 0xde, 0xe7, 0xba, 0xa2, 0xf1, 0x75, 0x7c, 0x55, 0x7d, 0x1d, 0x52, 0x5c, 0xae, 0xca, 0xa3,
	0x20, 0xb9, 0xc6, 0x8a, 0x11, 0x7a, 0x1f, 0xd6, 0x4e, 0x08, 0x4e, 0x48, 0xe2, 0x48, 0x09, 0x16,
	0x6a, 0xdb, 0x11, 0xc6, 0x7b, 0x42, 0x88, 0x3f, 0x86, 0xcb, 0x51, 0x4c, 0x58, 0x27, 0xe8, 0xb8,
	0x51, 0x18, 0x12, 0x97, 0x3a, 0xec, 0xd9, 0xd6, 0xe2, 0x53, 0x0d, 0xf6, 0x69, 0xe8, 0xf5, 0xc5,
	0x87, 0xe3, 0x64, 0x6a, 0x7d, 0xf0, 0x2a, 0x79, 0x59, 0x88, 0x8a, 0x62, 0xdd, 0x02, 0x8d, 0xe7,
	0x49, 0x1b, 0x9a, 0xdb, 0x87, 0x43, 0x67, 0x6f, 0xc0, 0x26, 0xb7, 0x40, 0xdb, 0x9d, 0x4c, 0x0e,
	0xc5, 0xd4, 0xf1, 0xf6, 0xf1, 0x64, 0x77, 0xcb, 0x50, 0x10, 0x82, 0xf5, 0xf1, 0xe1, 0xe0, 0x60,
	0x78, 0xd7, 0xe9, 0x8f, 0x0f, 0x0e, 0x06, 0xfd, 0x09, 0xcf, 0x86, 0xa6, 0xd1, 0xda, 0xd1, 0x1f,
	0xe5, 0xaf, 0x94, 0x93, 0x06, 0xa7, 0xe5, 0xc6, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x3e,
	0x47, 0x79, 0x38, 0x15, 0x00, 0x00,
}
